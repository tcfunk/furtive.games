# PHP CircleCI 2.0 configuration file
# See: https://circleci.com/docs/2.0/language-php/
version: 2

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      # Specify the version you desire here
      - image: cimg/php:8.1-browsers

    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout

      - run: sudo apt update # PHP CircleCI 2.0 Configuration File# PHP CircleCI 2.0 Configuration File sudo apt install zlib1g-dev libsqlite3-dev
      - run: sudo docker-php-ext-install zip
      - run: sudo apt install sqlite3

      # Replace mysql module with sqlite
      - run: sed -i 's/mysql/sqlite/g' config/sync/core.extension.yml

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: composer install -n --prefer-dist

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.lock" }}
          paths:
            - ./vendor

      # prepare the database
      - run: cp circleci.settings.php web/sites/default/settings.php
      - run: ./vendor/bin/drush si --existing-config --yes

      # start php webserver
      - run: php -S localhost:9999 -t ~/project/web &
  test:
    steps:
      - checkout
      - run: ./vendor/bin/behat --profile=ci


workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test
        requires:
        - build